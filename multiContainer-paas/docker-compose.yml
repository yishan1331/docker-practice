version: "3.7"
services:
    php:
        build:
            context: ${SERVICES_DIR}/php
            args:
                # PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
                PHP_VERSION: php:${PHP_VERSION}-fpm
                PHP_EXTENSIONS: ${PHP_EXTENSIONS}
                CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
                TZ: "$TZ"
        volumes:
            - ${PWD}/${DATA_DIR}/html:/var/www/html:rw
            - ${PWD}/${SERVICES_DIR}/${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
            # php-fpm 的配置
            - ${PWD}/${SERVICES_DIR}/${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/zz-docker.conf:rw
            # 挂载宿主机 socket 目录，因为 nginx 服务也需要访问
            - ${PWD}/${DATA_DIR}/php/php_fpm/sock:/run/php/
            - ${PWD}/${DATA_DIR}/${PHP_LOG_DIR}:/var/log/php
        restart: always

    nginx:
        image: nginx
        ports:
            - ${NGINX_HTTP_HOST_PORT}:80
            - ${NGINX_HTTPS_HOST_PORT}:443
        volumes:
            - ${PWD}/${SERVICES_DIR}/${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
            - ${PWD}/${SERVICES_DIR}/${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:rw
            - ${PWD}/${DATA_DIR}/html:/var/www/html:rw
            - ${PWD}/${DATA_DIR}/${NGINX_LOG_DIR}/web:/var/log/nginx/:rw

            # link php-fpm sock
            - ${PWD}/${DATA_DIR}/php/php_fpm/sock:/run/php/

            # - ${DATA_DIR}/certbot/conf:/etc/letsencrypt
            # - ${DATA_DIR}/certbot/var:/var/lib/letsencrypt
            - ${PWD}/${SERVICES_DIR}/${NGINX_SSL_CERTIFICATE_DIR}:/etc/nginx/ssl:rw
            
            # - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
            # - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro

        restart: always
        environment:
            TZ: "$TZ"
        links:
            - php
    
    nginx_api:
        image: nginx
        ports:
            - ${NGINX_UWASI_HOST_PORT}:3687
        volumes:
            - ${PWD}/${SERVICES_DIR}/${NGINX_API_CONFD_DIR}:/etc/nginx/conf.d/:rw
            - ${PWD}/${SERVICES_DIR}/${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
            - ${PWD}/${DATA_DIR}/${NGINX_LOG_DIR}/api:/var/log/nginx/:rw

            # - ${PWD}/${DATA_DIR}/${UWSGI_SOCK_DIR}/spdpaas_uwsgi.sock:/run/uwsgi/spdpaas_uwsgi.sock
            # - ${DATA_DIR}/certbot/conf:/etc/letsencrypt
            # - ${DATA_DIR}/certbot/var:/var/lib/letsencrypt
            - ${PWD}/${SERVICES_DIR}/${NGINX_SSL_CERTIFICATE_DIR}:/etc/nginx/ssl:rw
            
            # - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
            # - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro

        restart: always
        environment:
            TZ: "$TZ"
        depends_on:
            - flask_app
    
    flask_app:
        build:
            context: ${SERVICES_DIR}/flask
            args:
                TZ: "$TZ"
        user: www-data
        ports:
            - "3688"
        volumes:
            # - ${PWD}/${DATA_DIR}/${UWSGI_SOCK_DIR}:/tmp/spdpaas_uwsgi.sock:ro
            - ${PWD}/${DATA_DIR}/${UWSGI_LOG_DIR}:/var/log/uwsgi/:rw
        # command:
        #     [
        #         "uwsgi",
        #         "--ini",
        #         "/var/www/spdpaas/spdpaas_uwsgi.ini",
        #     ]
        sysctls:
            - net.core.somaxconn=32678
        environment:
            TZ: "$TZ"
        depends_on:
            - redis
            - postgres
            - mysql
        links:
            - redis
            - postgres
            - mysql

    # certbot:
    #     image: certbot/certbot:latest
    #     command: certonly --webroot --register-unsafely-without-email --webroot-path=/var/www/certbot --agree-tos  -d spdpaas.com -d www.spdpaas.com
    #     volumes:
    #         - ${DATA_DIR}/certbot/conf:/etc/letsencrypt
    #         - ${DATA_DIR}/certbot/var:/var/lib/letsencrypt
    #         - ${DATA_DIR}/certbot/log:/var/log/letsencrypt
    #         - ${DATA_DIR}/certbot/data:/var/www/certbot

    redis:
        image: redis
        ports:
            - ${REDIS_HOST_PORT}:6379
        volumes:
            - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
            - ${PWD}/${DATA_DIR}/redis:/data/:rw
        restart: always
        entrypoint: ["redis-server", "/etc/redis.conf"]
        environment:
            TZ: "$TZ"

    postgres:
        image: postgres
        restart: always
        ports:
            - ${POSTGRES_HOST_PORT}:5432
        volumes:
            - ${POSTGRES_CONF_FILE}:/etc/postgresql/postgresql.conf:ro
            - ${POSTGRES_HBA_CONF_FILE}:/etc/postgresql/pg_hba.conf:ro
            - ${PWD}/${SERVICES_DIR}/postgres/initdb.d:/docker-entrypoint-initdb.d
            - ${PWD}/${DATA_DIR}/postgres:/var/lib/postgresql/data:rw
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}

    mysql:
        image: mariadb:${MARIADB_VERSION}
        ports:
            - ${MYSQL_HOST_PORT}:3306
        volumes:
            - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/:ro
            - ${PWD}/${DATA_DIR}/mysql:/var/lib/mysql/:rw
        restart: always
        networks:
            - default
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            TZ: "$TZ"

    # worker1:
    #     build:
    #         context: ${SERVICES_DIR}/celery
    #         args:
    #             TZ: "$TZ"
    #     volumes:
    #         - ./wait-for-it.sh:/wait-for-it.sh
    #         - ${DATA_DIR}/${CELERY_LOG_DIR}:/var/log/celery/:rw
    #     command:
    #         [
    #             "/bin/sh",
    #             "-c",
    #             "/wait-for-it.sh redis:6379 -t 5 -- celery -A celeryWorker worker --pidfile=/var/run/worker1.pid --loglevel=debug --logfile=/var/log/celery/worker1.log -c 1000 -P gevent -O fair",
    #         ]
    #     depends_on:
    #         - redis
    #     links:
    #         - redis
    #         - postgres

    # worker2:
    #     build:
    #         context: ${SERVICES_DIR}/celery
    #         args:
    #             TZ: "$TZ"
    #     volumes:
    #         - ./wait-for-it.sh:/wait-for-it.sh
    #         - ${DATA_DIR}/${CELERY_LOG_DIR}:/var/log/celery/:rw
    #     command:
    #         [
    #             "/bin/sh",
    #             "-c",
    #             "/wait-for-it.sh redis:6379 -t 5 -- celery -A celeryWorker worker --pidfile=/var/run/worker2.pid --loglevel=debug --logfile=/var/log/celery/worker2.log -c 1000 -P gevent -O fair",
    #         ]
    #     depends_on:
    #         - redis
    #     links:
    #         - redis
    #         - postgres

